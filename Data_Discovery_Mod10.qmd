---
title: "Mod 10 Data Discovery"
format: html
editor: visual
---

## **Dataset:**

**Galton Heights:** The data set Galton in the mosaicData package has parent and adult child heights for around 200 families.  Note that all female heights were multiplied by 1.08.  Use midparent height to predict child height with family as a random effect.

```{r, include = F, warning = F}

# Library

library(mosaicData) # Galton Data Set
library(tibble)     # making data frames
library(dplyr)      # data wrangiling
library(ggplot2)    # plots
library(GGally)     # paired plot
library(lme4)       # mixed effects
library(tidyr)
```

| Field | Data Type | Notes: |
|------------------------|------------------------|------------------------|
| family | Categorica (Factor) | 197 levels |
| father height | Continuous | inches |
| mother height | Continuous | inches (multiplied by 1.08) |
| sex | Categorical(Factor) | 2 levels, child's sex |
| height | Continuous | the child's height as an adult (in inches) |
| nkids | Integer | the number of adult children in the family, or, at least, the number whose heights Galton recorded. |
| midparent_height | Continuous | Computed field: Father_height + Mother_Height / 2 |

Data Pre-Processing

```{r, include = F}

# Data Pre-Processing:

data("Galton")

df = as_tibble(Galton)

nrow(df) # 898

sum(is.na(df)) # 0 

## Computed field, midparent

### Note: Francis Galton collected this data in the 1800's. 5'6 for a male was considered the avg height

df = df |> 
  dplyr::group_by(father,mother) |> 
  dplyr::mutate(
    midparent_height = (father + mother) / 2,
    mba_potential = ifelse(midparent_height >= 66.75, 1, 0) # tall = 1, short = 0
  )

## Make mba_potential a factor

df$mba_potential = factor(df$mba_potential)

## Make family a factor

df$family = factor(df$family)
```

## Task 1: EDA

```{r, echo = F, message = F}

### pair plot

df |> 
  dplyr::select(
    -family
  ) |> 
  dplyr::ungroup() |> 
  GGally::ggpairs()
```

```{r, echo = F}

# Summary Statistics:

## Histograms of height variables:

hist(df$father)

hist(df$mother)

hist(df$height)

hist(df$midparent_height)

## max,min avg

df |> 
  dplyr::select(
    father,
    mother,
    height,
    midparent_height
  ) |> 
  summary()

## Height v sex:

df |> 
  ggplot2::ggplot(
    aes(
      x = sex,
      y = height
    )
  ) +
  geom_boxplot() +
  labs(title = "Male children are taller on average than female children")

## Father height and children height

df |> 
  ggplot2::ggplot(
    aes(
      x = father,
      y = height
    )
  ) +
  geom_point() +
  geom_smooth(method = "glm") +
  labs(title = "Relationship between Father's height and \n Obtained Children Height")


## motherheight and children height

df |> 
  ggplot2::ggplot(
    aes(
      x = mother,
      y = height
    )
  ) +
  geom_point() +
  geom_smooth(method = "glm") +
  labs(title = "Relationship between Mother's height and \n Obtained Children Height")

## Father height and children height

df |> 
  ggplot2::ggplot(
    aes(
      x = father,
      y = height,
      fill = sex
    )
  ) +
  geom_point() +
  geom_smooth(method = "glm") +
  labs(title = "Relationship between Father's height and \n Obtained Children (Male and Female) Height")


## motherheight and children height

df |> 
  ggplot2::ggplot(
    aes(
      x = mother,
      y = height,
      fill = sex
    )
  ) +
  geom_point() +
  geom_smooth(method = "glm") +
  labs(title = "Relationship between Mother's height and \n Obtained Children (Male and Female) Height")


## Midparent height v children height

df |> 
  ggplot2::ggplot(
    aes(
      x = midparent_height,
      y = height,
      fill = sex
    )
  ) +
  geom_point() +
  geom_smooth(method = "glm") +
  labs(title = "Relationship between Midparent Height and \n Obtained Children (Male and Female) Height")


## NBA Potential

df |> 
  ggplot2::ggplot(
    aes(
      x = mba_potential,
      y = height
    )
  ) +
  geom_boxplot() +
  geom_hline(
    yintercept = 66.76,
    color = "red"
    ) +
  labs(
    title = "Shorter parents produce shorter than avergage children and taller parents produce taller than average children",
    subtitle = "Tall is considered 66.75inches or higher"
    )

## NBA Potential by sex

df |> 
  ggplot2::ggplot(
    aes(
      x = mba_potential,
      y = height
    )
  ) +
  geom_boxplot() +
  facet_wrap(~sex) +
  labs(
    title = "Shorter parents produce shorter than avergage children and taller parents produce taller than average children",
    subtitle = "Tall is considered 66.75inches or higher"
    )

## Height Dist of family

df |>
  dplyr::group_by(family) |> 
  dplyr::filter(
    family %in% c(1:10)
  ) |> 
ggplot(
  aes(
    x = family,
    y = height
    )
  ) +
  geom_boxplot() + 
  labs(
    x = "Family",
    y = "Height",
    title = "Height Distribution by Family"
    )
```

## Task 2: Random Intercept or Random Slope?

```{r, echo = F}

# Compute means for each random effect accross sex

## sex and family

table1 = df |> 
  dplyr::group_by(
    family,
    sex
    ) |> 
  dplyr::summarise(
    mean_height = mean(height, na.rm = TRUE)
  )

## family and nba_potential

table2 = df |> 
  dplyr::group_by(
    family,
    mba_potential
    ) |> 
  dplyr::summarise(
    mean_height = mean(height, na.rm = TRUE)
  )

print(table1)

print(table2)

# Plots for seeing how the intercept can vary

table1 |>
  dplyr::filter(
    family %in% c(1:10)
  ) |> 
ggplot(
  aes(x = family,
      y = mean_height
      )
  ) +
  geom_point() +
  labs(
    x = "Family",
    y = "Mean Height",
    title = "Mean Height by Family",
    subtitle = "Scatteredpoints = Intercepts Vary")
```

## Task 3, 4: Fitting Several Models, Comparing AIC

```{r, echo = F}

# Since each family only has one midparent height value, there is no within-family variation. This means that we can't estimate random slopes. This narrows down the models to only the naive model and the one with random intercepts.
# We only have two models to fit and compare

mod0 <- lm(height ~ midparent_height, df) #ignores random effects, assumes all observations are independent

mod1 <- lmer(height ~ midparent_height + (1|family), df) #only random intercept (each family has a different average child height, same slope across families)

summary(mod0) # slope: 0.6693, p-value: rounds to 0 (2e-16), residual standard error is 3.388

summary(mod1) # slope: 0.64264, p-value: rounds to 0 (6.83e-15), variance of family(intercept): 0.8615
# variance of 0.8615 means that there is some variation in child height across families but not by a huge amount.

AIC(mod0, mod1)

#mod0: 4743.825
#mod1: 4742.830
#mod1 has a slightly lower AIC, meaning it has a slightly better fit compared to the model that doesn't account for dependent observations.


# check residuals of mod1

plot(
  y = resid(mod1),
  x = fitted(mod1)
)
  
```

## Task 5: Inference

The slightly lower AIC of mod1 (4742.830) compared to mod0 (4743.825) indicates it is a slightly better linear model which suggests that the family from which a child comes has an effect on child height. Both models consider midparent height as a fixed effect, with similar slopes of 0.6693 and 0.64264 for mod0 and mod1 respectively. However, mod1 also recognizes the lack of independence of measurements within each family. The variance of the family intercept of mod1 (0.8615) means that while family may play a small role in the height of the child and that child height is not greatly influenced by family despite the non-independence. Validating our model select, we can see that from the residual plot, we can see there is a lot of scatter which means mod1 is behaving well with respect to the linear model assumptions.
